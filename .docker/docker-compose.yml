version: "3.2"
services:
  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
        - 5672:5672
        - 15672:15672
    volumes:
        - rabbitmq:/var/lib/rabbitmq/
        - rabbitmq:/var/log/rabbitmq
    healthcheck:
      test:  ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      retries: 5
      timeout: 3s

  order-service:
    restart: always
    build: ../order_service
    environment:
      - RABBIT_MQ_HOST=rabbitmq
      - MONGODB_HOST=mongo
    ports:
      - 8080:8080
    depends_on:
      rabbitmq: 
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://order-service:8080/orders || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
  customer-service:
    restart: always
    build: ../customer_service
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-customer-db:5432/customer_manager
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: 1234
    ports:
      - 8082:8080
    depends_on:
      postgres-customer-db:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -v -f http://customer-service:8080/customers || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 5

  store-bff:
    restart: always
    build: ../store_bff
    environment:
      - CUSTOMER_SERVICE_URL=http://customer-service:8080
      - ORDER_SERVICE_URL=http://order-service:8080
    ports:
      - 8085:8085
    depends_on:
      order-service:
        condition: service_healthy
      customer-service:
        condition: service_healthy

  mongo-express:
    image: mongo-express
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_BASICAUTH_USERNAME: root
      ME_CONFIG_BASICAUTH_PASSWORD: root
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: root
      ME_CONFIG_MONGODB_URL: "mongodb://root:root@mongo:27017"
    depends_on:
      - mongo
  mongo:
    image: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    ports:
      - "27017:27017"
    volumes:
      - mongo:/data/db

  postgres-customer-db:
    image: postgres:13
    container_name: postgres-customer-db
    environment:
      POSTGRES_DB: customer_manager
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234
    ports:
      - "5432:5432"
    volumes:
      - postgres:/var/lib/postgresql/data

    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5


volumes:
  mongo:
  rabbitmq:
  postgres: